{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleSortAlphabetically","setState","ALPHABET","handleSortByLength","LENGTH","handleReverse","handleReset","this","goodsToDisplay","isOriginalOrder","reverseButtonClasses","sort","a","b","length","reverse","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,iFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAWE,IAAME,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,yBAA2B,WACzB,EAAKC,SAAS,CACZH,SAAUL,EAASS,YARzB,EAYEC,mBAAqB,WACnB,EAAKF,SAAS,CACZH,SAAUL,EAASW,UAdzB,EAkBEC,cAAgB,WACd,EAAKJ,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBApBzB,EAwBES,YAAc,WACZ,EAAKL,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KA3BlB,4CA+BE,WACE,MAAiCU,KAAKX,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WAEZW,EAAc,UAAOd,GAErBe,GAAmBZ,GAAcC,IAAaL,EAASM,KAEvDW,EAAoB,4BAAwBb,EAAa,GAAK,YAYpE,OAVIC,IAAaL,EAASS,SACxBM,EAAeG,OACNb,IAAaL,EAASW,QAC/BI,EAAeG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAGzCjB,GACFW,EAAeO,UAIf,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBlB,IAAaL,EAASS,SAAW,GAAK,YACnEgB,QAASX,KAAKP,yBAHhB,iCAQA,wBACEiB,KAAK,SACLD,UAAS,4BAAuBlB,IAAaL,EAASW,OAAS,GAAK,YACpEc,QAASX,KAAKJ,mBAHhB,4BAQA,wBACEc,KAAK,SACLD,UAAWN,EACXQ,QAASX,KAAKF,cAHhB,sBAQEI,GACA,wBACEQ,KAAK,SACLD,UAAU,4BACVE,QAASX,KAAKD,YAHhB,sBASJ,6BACGE,EAAeW,KAAI,SAAAC,GAAI,OACtB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eAzFpC,GAAyBC,IAAMC,WCzB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8972756a.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleSortAlphabetically = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  handleSortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  handleReverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    const goodsToDisplay = [...goodsFromServer];\n\n    const isOriginalOrder = !isReversed && sortType === SortType.NONE;\n\n    const reverseButtonClasses = `button is-warning ${isReversed ? '' : 'is-light'}`;\n\n    if (sortType === SortType.ALPHABET) {\n      goodsToDisplay.sort();\n    } else if (sortType === SortType.LENGTH) {\n      goodsToDisplay.sort((a, b) => a.length - b.length);\n    }\n\n    if (isReversed) {\n      goodsToDisplay.reverse();\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${sortType === SortType.ALPHABET ? '' : 'is-light'}`}\n            onClick={this.handleSortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${sortType === SortType.LENGTH ? '' : 'is-light'}`}\n            onClick={this.handleSortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={reverseButtonClasses}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {!isOriginalOrder && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n        <ul>\n          {goodsToDisplay.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}